mutate(diff = time - lag(time)) %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | diff <= 0.1 | is.na(diff))) %>%
mutate(count = sequence(n())) %>%
mutate(ccount = max(count)) %>%
filter(ccount <= 15) %>%
summarise(seq = list(signal), diff = list(diff))
word <- diff_df$word
user <- diff_df$userId
data <- cbind(word, user, plyr::ldply(diff_df$seq, rbind), plyr::ldply(diff_df$diff, rbind))
data
write.csv(data, 'word_csignal.csv', row.names = FALSE, quote = FALSE)
setwd("~/Documents/dev/gorani-reader/backend/dataserver/notebooks")
write.csv(data, 'word_csignal.csv', row.names = FALSE, quote = FALSE)
library(GGally)
library(mice)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
filter(!(diff == 0 | diff <= 0.1 | is.na(diff))) %>%
mutate(count = sequence(n())) %>%
mutate(csignal = cumsum(signal) / count)
library(GGally)
library(mice)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
filter(!(diff == 0 | diff <= 0.1 | is.na(diff))) %>%
mutate(count = sequence(n())) %>%
mutate(csignal = cumsum(signal) / count) %>%
mutate(ccount = max(count), time = time-min(time)) %>%
filter(ccount <= 15)
library(GGally)
library(mice)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(diff = time - lag(time)) %>%
filter(!(diff == 0 | diff <= 0.1 | is.na(diff))) %>%
mutate(count = sequence(n())) %>%
mutate(csignal = cumsum(signal) / count) %>%
mutate(ccount = max(count), time = time-min(time)) %>%
filter(ccount <= 15)
word <- diff_df$word
user <- diff_df$userId
data <- cbind(word, user, plyr::ldply(diff_df$seq, rbind), plyr::ldply(diff_df$diff, rbind))
library(GGally)
library(mice)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(diff = time - lag(time)) %>%
filter(!(diff == 0 | diff <= 0.1 | is.na(diff))) %>%
mutate(count = sequence(n())) %>%
mutate(csignal = cumsum(signal) / count) %>%
mutate(ccount = max(count), time = time-min(time)) %>%
filter(ccount <= 15)
diff_df
library(GGally)
library(mice)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(diff = time - lag(time)) %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | diff <= 0.1 | is.na(diff))) %>%
mutate(count = sequence(n())) %>%
mutate(csignal = cumsum(signal) / count, cdiff = cumsum(diff) / count) %>%
mutate(ccount = max(count), time = time-min(time)) %>%
filter(ccount <= 15) %>% select(csignal, time)
diff_df
library(GGally)
library(mice)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(diff = time - lag(time)) %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | diff <= 0.1 | is.na(diff))) %>%
mutate(count = sequence(n())) %>%
mutate(csignal = cumsum(signal) / count, cdiff = cumsum(diff) / count) %>%
mutate(ccount = max(count), time = time-min(time)) %>%
filter(ccount <= 15) %>% ungroup() %>% select(userId, word, count,cdiff, csignal, time)
diff_df
write.csv(diff_df, 'word_csignal_tred.csv', row.names = FALSE, quote = FALSE)
library(GGally)
library(mice)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(diff = time - lag(time)) %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | diff <= 0.1 | is.na(diff))) %>%
mutate(count = sequence(n())) %>%
mutate(csignal = cumsum(signal) / count, cdiff = cumsum(diff) / count) %>%
mutate(ccount = max(count), time = time-min(time)) %>%
filter(ccount <= 15) %>% ungroup() %>% select(userId, word, count,cdiff, signal, csignal, time)
library(GGally)
library(mice)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(diff = time - lag(time)) %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | diff <= 0.1 | is.na(diff))) %>%
mutate(count = sequence(n())) %>%
mutate(csignal = cumsum(signal) / count, cdiff = cumsum(diff) / count) %>%
mutate(ccount = max(count), time = time-min(time)) %>%
filter(ccount <= 15) %>% ungroup() %>% select(userId, word, count,cdiff, signal, csignal, time)
write.csv(diff_df, 'word_csignal_tred.csv', row.names = FALSE, quote = FALSE)
library(GGally)
library(mice)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(diff = time - lag(time)) %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | diff <= 0.1 | is.na(diff))) %>%
mutate(count = sequence(n())) %>%
mutate(csignal = cumsum(signal) / count, cdiff = cumsum(diff) / count) %>%
mutate(ccount = max(count), time = time-min(time)) %>%
filter(ccount <= 15) %>% ungroup() %>% select(userId, word, count,cdiff, signal, csignal, time)
write.csv(diff_df, 'word_csignal_tred.csv', row.names = FALSE, quote = FALSE)
library(GGally)
library(mice)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(diff = time - lag(time)) %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | diff <= 0.1 | is.na(diff))) %>%
mutate(count = sequence(n())) %>%
mutate(csignal = cumsum(signal) / count, cdiff = cumsum(diff) / count) %>%
mutate(csignal = lag(csignal), cdiff = lag(cdiff)) %>%
filter(!(is.na(csignal))) %>%
mutate(ccount = max(count), time = time-min(time)) %>%
filter(ccount <= 15) %>% ungroup() %>% select(userId, word, count,cdiff, signal, csignal, time)
write.csv(diff_df, 'word_csignal_tred.csv', row.names = FALSE, quote = FALSE)
library(GGally)
library(mice)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(diff = time - lag(time)) %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | diff <= 0.1 | is.na(diff))) %>%
mutate(count = sequence(n())) %>%
mutate(csignal = cumsum(signal) / count, cdiff = cumsum(diff) / count) %>%
mutate(csignal = lag(csignal), cdiff = lag(cdiff)) %>%
filter(!(is.na(csignal))) %>%
mutate(ccount = max(count), time = time-min(time)) %>%
filter(ccount <= 15) %>% ungroup() %>% select(userId, word, count,cdiff, signal, csignal)
write.csv(diff_df, 'word_csignal_tred.csv', row.names = FALSE, quote = FALSE)
library(GGally)
library(mice)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(diff = time - lag(time)) %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | diff <= 0.1 | is.na(diff))) %>%
mutate(count = sequence(n())) %>%
mutate(csignal = cumsum(signal) / count, cdiff = cumsum(diff) / count) %>%
mutate(csignal = lag(csignal), cdiff = lag(cdiff)) %>%
filter(!(is.na(csignal))) %>%
mutate(ccount = max(count), time = time-min(time)) %>%
filter(ccount <= 15) %>% ungroup() %>% select(userId, word, count,cdiff, signal, csignal)
ggpairs(diff_df)
library(GGally)
library(mice)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(diff = time - lag(time)) %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | diff <= 0.1 | is.na(diff))) %>%
mutate(count = sequence(n())) %>%
mutate(csignal = cumsum(signal) / count, cdiff = cumsum(diff) / count) %>%
mutate(csignal = lag(csignal), cdiff = lag(cdiff)) %>%
filter(!(is.na(csignal))) %>%
mutate(ccount = max(count), time = time-min(time)) %>%
filter(ccount <= 15) %>% ungroup() %>% select(count,cdiff, signal, csignal)
ggpairs(diff_df)
library(GGally)
library(mice)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(diff = time - lag(time)) %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | diff <= 0.1 | is.na(diff))) %>%
mutate(count = sequence(n())) %>%
mutate(csignal = cumsum(signal) / count, cdiff = cumsum(diff) / count) %>%
mutate(csignal = lag(csignal), cdiff = lag(cdiff)) %>%
filter(!(is.na(csignal))) %>%
mutate(ccount = max(count), time = time-min(time)) %>%
filter(ccount <= 15) %>% ungroup() %>% select(count, diff, signal, csignal)
ggpairs(diff_df)
library(GGally)
library(mice)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(diff = time - lag(time)) %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | diff <= 0.1 | is.na(diff))) %>%
mutate(count = sequence(n())) %>%
mutate(csignal = cumsum(signal) / count, cdiff = cumsum(diff) / count) %>%
mutate(csignal = lag(csignal), cdiff = lag(cdiff)) %>%
filter(!(is.na(csignal))) %>%
mutate(ccount = max(count), time = time-min(time)) %>%
filter(ccount <= 15) %>% ungroup() %>% select(userId, word, count, signal, csignal)
write.csv(diff_df, 'word_csignal_tred.csv', row.names = FALSE, quote = FALSE)
library(mgcv)
clean_pages <- vroom(str_c('clean_pages.csv'), delim = ",", col_types = cols())
session_info <- vroom(str_c('sess.csv'), delim = ",", col_types = cols())
signals <- vroom(str_c('signals.csv'), delim = ",", col_types = cols())
clean_signals <- vroom(str_c('csignals.csv'), delim = ",", col_types = cols())
signals <- signals %>%
mutate(word = wordStem(word, language = "porter"))
signal_with_id <- clean_signals %>%
group_by(userId, word) %>%
mutate(count = sequence(n()))
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(diff = time - lag(time)) %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | diff <= 0.1 | is.na(diff))) %>%
mutate(count = sequence(n())) %>%
mutate(csignal = cumsum(signal) / count, cdiff = cumsum(diff) / count) %>%
mutate(csignal = lag(csignal), cdiff = lag(cdiff)) %>%
filter(!(is.na(csignal))) %>%
mutate(ccount = max(count), time = time-min(time)) %>%
filter(ccount <= 15) %>% ungroup() %>% select(userId, word, count, signal, csignal)
write.csv(diff_df, 'word_csignal_tred.csv', row.names = FALSE, quote = FALSE)
library(GGally)
library(mice)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(diff = time - lag(time)) %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | diff <= 0.1 | is.na(diff))) %>%
mutate(count = sequence(n())) %>%
mutate(csignal = cumsum(signal) / count, cdiff = cumsum(diff) / count) %>%
mutate(csignal = lag(csignal), cdiff = lag(cdiff)) %>%
filter(!(is.na(csignal))) %>%
mutate(ccount = max(count), time = time-min(time)) %>%
filter(ccount <= 15) %>% ungroup() %>% select(count, signal, csignal)
ggpairs(diff_df)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(diff = time - lag(time)) %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | diff <= 0.1 | is.na(diff))) %>%
mutate(count = sequence(n())) %>%
mutate(csignal = cumsum(signal) / count, cdiff = cumsum(diff) / count) %>%
mutate(csignal = lag(csignal), cdiff = lag(cdiff)) %>%
filter(!(is.na(csignal))) %>%
mutate(ccount = max(count), time = time-min(time)) %>%
filter(ccount <= 15) %>% ungroup() %>% select(userId, word, count, signal, csignal, diff)
write.csv(diff_df, 'word_csignal_tred.csv', row.names = FALSE, quote = FALSE)
library(mgcv)
clean_pages <- vroom(str_c('clean_pages.csv'), delim = ",", col_types = cols())
session_info <- vroom(str_c('sess.csv'), delim = ",", col_types = cols())
signals <- vroom(str_c('signals.csv'), delim = ",", col_types = cols())
clean_signals <- vroom(str_c('csignals.csv'), delim = ",", col_types = cols())
signals <- signals %>%
mutate(word = wordStem(word, language = "porter"))
signal_with_id <- signals %>%
group_by(userId, word) %>%
mutate(count = sequence(n()))
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(diff = time - lag(time)) %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | diff <= 0.1 | is.na(diff))) %>%
mutate(count = sequence(n())) %>%
mutate(csignal = cumsum(signal) / count, cdiff = cumsum(diff) / count) %>%
mutate(csignal = lag(csignal), cdiff = lag(cdiff)) %>%
filter(!(is.na(csignal))) %>%
mutate(ccount = max(count), time = time-min(time)) %>%
filter(ccount <= 15) %>% ungroup() %>% select(userId, word, count, signal, csignal, diff)
write.csv(diff_df, 'word_csignal_tred.csv', row.names = FALSE, quote = FALSE)
View(signal_with_id)
library(mgcv)
clean_pages <- vroom(str_c('clean_pages.csv'), delim = ",", col_types = cols())
session_info <- vroom(str_c('sess.csv'), delim = ",", col_types = cols())
signals <- vroom(str_c('signals.csv'), delim = ",", col_types = cols())
clean_signals <- vroom(str_c('csignals.csv'), delim = ",", col_types = cols())
set.seed(4321)
clean_pages <- clean_pages %>%
select(userId, time)
cols <- clean_pages %>%
distinct(userId) %>%
mutate(cols = rep_len(brewer.pal(7, "Set2"), length.out = n_distinct(clean_pages$userId)))
ts_out <- clean_pages %>%
left_join(cols, by = "userId") %>%
mutate(time = as.POSIXct(as.numeric(time) %% 86400, origin="1970-01-01", tz="GMT"))
pal <- cols$cols %>%
setNames(cols$userId)
shared_ts <- highlight_key(ts_out)
palette(brewer.pal(100, "Set3"))
gg <- shared_ts %>%
ggplot(aes(time, fill = userId, group = userId)) +
geom_histogram(bins=60) +
scale_color_manual(values = pal) +
labs(x = "Time", y = "Count") +
theme_tufte() +
NULL
filter2 <- bscols(
ggplotly(gg, dynamicTicks = TRUE),
widths = c(12, 12)
)
bscols(filter2)
p <- signals %>%
select(signal, pos) %>%
count(pos) %>%
add_tally(n, name = "total") %>%
mutate(perc = n/total) %>%
ggplot(aes(reorder(pos, n, FUN = min), perc, fill = pos)) +
geom_col() +
scale_y_continuous(labels = scales::percent) +
coord_flip() +
theme_hc() +
theme(legend.position = "none") +
labs(x = "", y = "", title = "Original")
p2 <- signals %>%
filter(signal == 0) %>%
select(signal, pos) %>%
count(pos) %>%
add_tally(n, name = "total") %>%
mutate(perc = n/total) %>%
ggplot(aes(reorder(pos, n, FUN = min), perc, fill = pos)) +
geom_col() +
scale_y_continuous(labels = scales::percent) +
coord_flip() +
theme_hc() +
theme(legend.position = "none") +
labs(x = "", y = "", title = "Unknown")
layout <- "
AAABBB
"
p + p2  + plot_layout(design = layout)
signals <- signals %>%
mutate(word = wordStem(word, language = "porter"))
signal_with_id <- clean_signals %>%
group_by(userId, word) %>%
mutate(count = sequence(n()))
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
mutate(diff = time - lag(time, 2)) %>%
mutate(tran=paste(lag(signal, 2), '->', lag(signal,1),'->',signal)) %>%
ungroup() %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | is.na(diff))) %>%
filter(diff > 0.1) %>%
select(word, diff, signal, tran)
p <- diff_df %>%
ggplot(aes(x=diff, color=tran)) +
stat_ecdf(geom="point", size=0.5)+
scale_x_log10(breaks = c(0.1, 0.5, 1, 2, 5, 10, 40)) +
theme_hc() +
labs(x = "Days", y = "", title = "Wait Time CDF") +
scale_fill_discrete("")
p2 <- diff_df %>%
count(tran) %>%
add_tally(n, name = "total") %>%
mutate(perc = n/total) %>%
ggplot(aes(reorder(tran, n, FUN = min), perc, fill = tran)) +
geom_col() +
scale_y_continuous(labels = scales::percent) +
coord_flip() +
theme_hc() +
theme(legend.position = "none") +
labs(x = "", y = "", title = "Transition Type")
p3 <- diff_df %>%
ggplot(aes(x=diff, fill='cdf', show.legend = FALSE)) +
stat_ecdf(aes(ymin=0,ymax=..y..), geom = "ribbon") +
scale_x_log10(breaks = c(0.1, 0.5, 1, 2,  5, 10, 40)) +
theme_hc() +
theme(legend.position="none") +
labs(x = "Days", y = "", title = "Wait Time CDF by Transition Type")
layout <- "
AAACC
BBBBB
BBBBB
BBBBB
"
p3 + p + p2 + plot_layout(design = layout)
signals <- signals %>%
mutate(word = wordStem(word, language = "porter"))
signal_with_id <- clean_signals %>%
group_by(userId, word) %>%
mutate(count = sequence(n()))
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
mutate(diff = time - lag(time, 2)) %>%
mutate(tran=paste(lag(signal, 2), '->', lag(signal,1),'->',signal)) %>%
ungroup() %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | is.na(diff))) %>%
filter(diff > 0.1) %>%
select(word, count, diff, time, signal, tran)
p <- diff_df %>%
ggplot(aes(x=count, color=tran)) +
stat_ecdf(geom="point", size=0.5)+
scale_x_log10(breaks = c(0.1, 0.5, 1, 2, 5, 7, 10, 12, 15, 40)) +
theme_hc() +
labs(x = "Count", y = "", title = "Count CDF") +
scale_fill_discrete("")
p2 <- diff_df %>%
count(tran) %>%
add_tally(n, name = "total") %>%
mutate(perc = n/total) %>%
ggplot(aes(reorder(tran, n, FUN = min), perc, fill = tran)) +
geom_col() +
scale_y_continuous(labels = scales::percent) +
coord_flip() +
theme_hc() +
theme(legend.position = "none") +
labs(x = "", y = "", title = "Transition Type")
p3 <- diff_df %>%
ggplot(aes(x=count, fill='cdf', show.legend = FALSE)) +
stat_ecdf(aes(ymin=0,ymax=..y..), geom = "ribbon") +
scale_x_log10(breaks = c(0.1, 0.5, 1, 2, 5, 7, 10, 12, 15, 40)) +
theme_hc() +
theme(legend.position="none") +
labs(x = "Count", y = "", title = "Count CDF by Transition Type")
layout <- "
AAACC
BBBBB
BBBBB
BBBBB
"
p3 + p + p2 + plot_layout(design = layout)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
mutate(diff = time - lag(time)) %>%
ungroup() %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | diff < 0.1 | is.na(diff))) %>%
select(word, diff, count, signal) %>%
mutate(signal = as.character(signal))
diff_df %>%
ggplot(aes(diff, fill = signal)) +
geom_density(bw = 0.1, alpha = 0.5) +
scale_x_log10(breaks = c(0.1, 1, 7, 15, 40)) +
# facet_wrap(~ cat_id, nrow = 3) +
theme_hc() +
theme(legend.position = "bottom") +
labs(x = "Days", y = "", fill = "Signal",
title = "P(F|wait time)")
diff_df %>%
ggplot(aes(count, fill = signal)) +
geom_density(bw = 0.1, alpha = 0.5) +
scale_x_log10(breaks = c(0, 1, 2, 3, 4, 5, 6, 7, 15, 40)) +
# facet_wrap(~ cat_id, nrow = 3) +
theme_hc() +
theme(legend.position = "bottom") +
labs(x = "# of encounters", y = "", fill = "Signal",
title = "f(# of encounters)")
diff_df %>%
filter(count < 50 & diff < 50) %>%
ggplot(aes(diff, count, color = signal)) +
geom_point(size=2 , alpha = 0.5) +
# facet_wrap(~ cat_id, nrow = 3) +
theme_hc() +
theme(legend.position = "bottom") +
labs(x = "diff", y = "count", fill = "Signal",
title = "P(F|# of encounters)")
word_freq <- signal_with_id %>%
select(userId, word, time) %>%
distinct(userId, word, time) %>%
group_by(userId, word) %>%
count() %>% group_by(word) %>%
summarise(n = mean(n)) %>%
ungroup()
word_freq %>%
ggplot(aes(n)) +
geom_boxplot(fill = 'blue', alpha = 0.7) +
scale_x_log10(breaks = c(0, 1, 2, 3, 7, 15, 40)) +
coord_cartesian(xlim = c(0.1,100)) +
theme_hc() +
labs(x = "", fill = "event", title="Count box plot")
library(GGally)
library(mice)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(diff = time - lag(time)) %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | diff <= 0.1 | is.na(diff))) %>%
mutate(count = sequence(n())) %>%
mutate(csignal = cumsum(signal) / count, cdiff = cumsum(diff) / count) %>%
mutate(csignal = lag(csignal), cdiff = lag(cdiff)) %>%
filter(!(is.na(csignal))) %>%
mutate(ccount = max(count), time = time-min(time)) %>%
filter(ccount <= 15) %>% ungroup() %>% select(count, signal, csignal)
ggpairs(diff_df)
diff_df %>%
filter(count < 50 & diff < 50) %>%
ggplot(aes(diff, count, color = signal)) +
geom_point(size=2 , alpha = 0.5) +
# facet_wrap(~ cat_id, nrow = 3) +
theme_hc() +
theme(legend.position = "bottom") +
labs(x = "diff", y = "count", fill = "Signal",
title = "P(F|# of encounters)")
