coord_flip() +
theme_hc() +
theme(legend.position = "none") +
labs(x = "", y = "", title = "Transition Type")
p3 <- diff_df %>%
ggplot(aes(x=count, fill='cdf', show.legend = FALSE)) +
stat_ecdf(aes(ymin=0,ymax=..y..), geom = "ribbon") +
scale_x_log10(breaks = c(0.1, 0.5, 1, 2, 5, 7, 10, 12, 15, 40)) +
theme_hc() +
theme(legend.position="none") +
labs(x = "Count", y = "", title = "Count CDF by Transition Type")
layout <- "
AAACC
BBBBB
BBBBB
BBBBB
"
p3 + p + p2 + plot_layout(design = layout)
word_freq <- signal_with_id %>%
select(userId, word, time) %>%
distinct(userId, word, time) %>%
group_by(userId, word) %>%
count() %>% group_by(word) %>%
summarise(n = mean(n)) %>%
ungroup()
word_freq %>%
ggplot(aes(n)) +
geom_boxplot(fill = 'blue', alpha = 0.7) +
scale_x_log10(breaks = c(0, 1, 2, 3, 7, 15, 40)) +
coord_cartesian(xlim = c(0.1,100)) +
theme_hc() +
labs(x = "", fill = "event", title="Count box plot")
make_tree <- function(seq_df, pp) {
make_tree2 <- function(g, df, sid, parent, sbefore, scount = 0, pp = 0, diff = 0, freq = 0) {
if (scount == 1) {
g <- g %>%
add_edges(c(parent,sid),width=2.5)
} else if (!is.na(parent)) {
if (pp == 0) {
l <- diff
} else {
l <- freq
}
g <- g %>%
add_edges(c(parent,sid),width=15*freq, arrow.mode='-', label=paste(round(l, digits=2)))
} else {
print(parent)
}
if (nrow(df) == 0 |scount > 6) {
return(g)
}
df2 <- df %>%
cbind() %>%
filter((count == scount | scount == 0) & (before==sbefore | is.na(sbefore))) %>%
group_by(signal) %>%
summarise(diff = mean(diff),n = n()) %>%
mutate(freq = n / sum(n)) %>%
ungroup() %>%
select(signal, freq, diff)
if (nrow(df2) == 0) {
return(g)
}
myid <- sid
for(i in 1:nrow(df2))
{
df3 <- df %>%
cbind() %>%
filter((count > scount) & (before==df2$signal[[i]]))
id <<- id + 1
node_id <- id
classes <- c('orange', 'green')
g <- g %>%
add_vertices(1, label='', color=classes[df2$signal[[i]]+1])
g <- make_tree2(g, df3, node_id, myid, df2$signal[[i]], scount + 1, pp, df2$diff[[i]], df2$freq[[i]])
}
return(g);
}
id <<- 1
return(make_tree2( make_empty_graph() %>% add_vertices(1, color="gray"), seq_df, 1, NA, NA, 0, pp));
}
library(igraph)
to_seq_df <- function(df) {
return (df %>% group_by(userId, word) %>%
arrange(count) %>%
mutate(count = count, diff = time - lag(time), signal=signal, before=lag(signal)) %>%
ungroup() %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | diff <= 0.1 | is.na(diff))) %>%
group_by(userId, word) %>%
mutate(count = sequence(n())) %>%
mutate(seq_id=paste(userId, '-', word)) %>%
ungroup() %>%
select(seq_id, count, before, diff, signal));
}
seq_df <- signal_with_id %>%
to_seq_df()
diff_tree = make_tree(seq_df, 0)
freq_tree = make_tree(seq_df, 1)
noun_tree <- signal_with_id %>%
filter(pos == 'NN') %>%
to_seq_df() %>%
make_tree(1)
vbd_tree <- signal_with_id %>%
filter(pos == 'VB' | pos == 'VBN' | pos == 'VBG' | pos == 'VBP') %>%
to_seq_df() %>%
make_tree(1)
jj_tree <- signal_with_id %>%
filter(pos == 'JJ') %>%
to_seq_df() %>%
make_tree(1)
rb_tree <- signal_with_id %>%
filter(pos == 'RB') %>%
to_seq_df() %>%
make_tree(1)
par(mfrow=c(1,2))
plot(noun_tree,
layout=layout_as_tree,
vertex.size=20,
main="noun",
edge.label.color="black",
edge.width = 2,
vertex.frame.color = "white",
)
plot(vbd_tree,
layout=layout_as_tree,
vertex.size=20,
main="verb",
edge.label.color="black",
edge.width = 2,
vertex.frame.color = "white",
)
plot(jj_tree,
layout=layout_as_tree,
vertex.size=20,
main="adj",
edge.label.color="black",
edge.width = 2,
vertex.frame.color = "white",
)
plot(rb_tree,
layout=layout_as_tree,
vertex.size=20,
main="rb",
edge.label.color="black",
edge.width = 2,
vertex.frame.color = "white",
)
plot(rb_tree,
layout=layout_as_tree,
vertex.size=20,
main="rb",
edge.label.color="black",
edge.width = 2,
vertex.frame.color = "white",
)
p2 <- plot(freq_tree,
layout=layout_as_tree,
vertex.size=20,
edge.label.color="black",
edge.width = 2,
vertex.frame.color = "white",
)
signals <- signals %>%
mutate(word = wordStem(word, language = "porter"))
signal_with_id <- clean_signals %>%
group_by(userId, word) %>%
mutate(count = sequence(n()))
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
mutate(diff = time - lag(time, 2)) %>%
mutate(tran=paste(lag(signal, 2), '->', lag(signal,1),'->',signal)) %>%
ungroup() %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | is.na(diff))) %>%
filter(diff > 0.1) %>%
select(word, count, time, signal, tran)
p <- diff_df %>%
ggplot(aes(x=count, color=tran)) +
stat_ecdf(geom="point", size=0.5)+
scale_x_log10(breaks = c(0.1, 0.5, 1, 2, 5, 7, 10, 12, 15, 40)) +
theme_hc() +
labs(x = "Count", y = "", title = "Count CDF") +
scale_fill_discrete("")
p2 <- diff_df %>%
count(tran) %>%
add_tally(n, name = "total") %>%
mutate(perc = n/total) %>%
ggplot(aes(reorder(tran, n, FUN = min), perc, fill = tran)) +
geom_col() +
scale_y_continuous(labels = scales::percent) +
coord_flip() +
theme_hc() +
theme(legend.position = "none") +
labs(x = "", y = "", title = "Transition Type")
p3 <- diff_df %>%
ggplot(aes(x=count, fill='cdf', show.legend = FALSE)) +
stat_ecdf(aes(ymin=0,ymax=..y..), geom = "ribbon") +
scale_x_log10(breaks = c(0.1, 0.5, 1, 2, 5, 7, 10, 12, 15, 40)) +
theme_hc() +
theme(legend.position="none") +
labs(x = "Count", y = "", title = "Count CDF by Transition Type")
layout <- "
AAACC
BBBBB
BBBBB
BBBBB
"
p3 + p + p2 + plot_layout(design = layout)
library(GGally)
ggpairs(diff_plot)
library(GGally)
ggpairs(diff_df)
View(diff_df)
View(diff_df)
signals <- signals %>%
mutate(word = wordStem(word, language = "porter"))
signal_with_id <- clean_signals %>%
group_by(userId, word) %>%
mutate(count = sequence(n()))
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
mutate(diff = time - lag(time, 2)) %>%
mutate(tran=paste(lag(signal, 2), '->', lag(signal,1),'->',signal)) %>%
ungroup() %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | is.na(diff))) %>%
filter(diff > 0.1) %>%
select(word, count, diff, time, signal, tran)
p <- diff_df %>%
ggplot(aes(x=count, color=tran)) +
stat_ecdf(geom="point", size=0.5)+
scale_x_log10(breaks = c(0.1, 0.5, 1, 2, 5, 7, 10, 12, 15, 40)) +
theme_hc() +
labs(x = "Count", y = "", title = "Count CDF") +
scale_fill_discrete("")
p2 <- diff_df %>%
count(tran) %>%
add_tally(n, name = "total") %>%
mutate(perc = n/total) %>%
ggplot(aes(reorder(tran, n, FUN = min), perc, fill = tran)) +
geom_col() +
scale_y_continuous(labels = scales::percent) +
coord_flip() +
theme_hc() +
theme(legend.position = "none") +
labs(x = "", y = "", title = "Transition Type")
p3 <- diff_df %>%
ggplot(aes(x=count, fill='cdf', show.legend = FALSE)) +
stat_ecdf(aes(ymin=0,ymax=..y..), geom = "ribbon") +
scale_x_log10(breaks = c(0.1, 0.5, 1, 2, 5, 7, 10, 12, 15, 40)) +
theme_hc() +
theme(legend.position="none") +
labs(x = "Count", y = "", title = "Count CDF by Transition Type")
layout <- "
AAACC
BBBBB
BBBBB
BBBBB
"
p3 + p + p2 + plot_layout(design = layout)
library(GGally)
df <- diff_df %>% select(count, diff, time, signal)
ggpairs(df)
View(p)
library(GGally)
df <- diff_df %>%
group_by(userId, word) %>%
mutate(csignal = cumsum(signal)/count)
library(GGally)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
mutate(diff = time - lag(time, 2)) %>%
mutate(tran=paste(lag(signal, 2), '->', lag(signal,1),'->',signal)) %>%
ungroup() %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | is.na(diff))) %>%
filter(diff > 0.1)
df <- diff_df %>%
group_by(userId, word) %>%
mutate(csignal = cumsum(signal)/count)
ggpairs(df)
library(GGally)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
mutate(diff = time - lag(time, 2)) %>%
mutate(tran=paste(lag(signal, 2), '->', lag(signal,1),'->',signal)) %>%
ungroup() %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | is.na(diff))) %>%
filter(diff > 0.1)
df <- diff_df %>%
group_by(userId, word) %>%
mutate(csignal = cumsum(signal)/count) %>%
select(csignal, signal, time, diff, count)
ggpairs(df)
library(GGally)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
mutate(diff = time - lag(time, 2)) %>%
mutate(tran=paste(lag(signal, 2), '->', lag(signal,1),'->',signal)) %>%
ungroup() %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | is.na(diff))) %>%
filter(diff > 0.1)
df <- diff_df %>%
group_by(userId, word) %>%
mutate(csignal = cumsum(signal)/count) %>%
ungroup() %>%
select(csignal, signal, time, diff, count)
ggpairs(df)
library(GGally)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
mutate(diff = time - lag(time, 2)) %>%
mutate(tran=paste(lag(signal, 2), '->', lag(signal,1),'->',signal)) %>%
ungroup() %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | is.na(diff))) %>%
filter(diff > 0.1)
df <- diff_df %>%
group_by(userId, word) %>%
arange(count) %>%
mutate(csignal = cumsum(signal)/count) %>%
ungroup() %>%
select(csignal, signal, time, diff, count)
library(GGally)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
mutate(diff = time - lag(time, 2)) %>%
mutate(tran=paste(lag(signal, 2), '->', lag(signal,1),'->',signal)) %>%
ungroup() %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | is.na(diff))) %>%
filter(diff > 0.1)
df <- diff_df %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(csignal = cumsum(signal)/count) %>%
ungroup() %>%
select(csignal, signal, time, diff, count)
ggpairs(df)
library(GGally)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
mutate(diff = time - lag(time, 2)) %>%
mutate(tran=paste(lag(signal, 2), '->', lag(signal,1),'->',signal)) %>%
ungroup() %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | is.na(diff))) %>%
filter(diff > 0.1)
df <- diff_df %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(csignal = cumsum(signal)/count, cdiff=cumsum(diff)) %>%
ungroup() %>%
select(csignal, signal, time, diff, count)
ggpairs(df)
library(GGally)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
mutate(diff = time - lag(time, 2)) %>%
mutate(tran=paste(lag(signal, 2), '->', lag(signal,1),'->',signal)) %>%
ungroup() %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | is.na(diff))) %>%
filter(diff > 0.1)
df <- diff_df %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(csignal = cumsum(signal)/count, cdiff=cumsum(diff)) %>%
ungroup() %>%
select(csignal, signal, time, diff, cdiff, count)
ggpairs(df)
library(GGally)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(diff = time - lag(time, 1)) %>%
mutate(csignal = cumsum(signal)/count, cdiff=cumsum(diff)) %>%
ungroup() %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | is.na(diff))) %>%
filter(diff > 0.1)
df <- diff_df %>%
group_by(userId, word) %>%
arrange(count) %>%
ungroup() %>%
select(csignal, signal, time, diff, cdiff, count)
ggpairs(df)
library(GGally)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(diff = time - lag(time, 1)) %>%
ungroup() %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | is.na(diff))) %>%
filter(diff > 0.1) %>%
group_by(userId, word) %>%
mutate(csignal = cumsum(signal)/count, cdiff=cumsum(diff)) %>%
ungroup()
df <- diff_df %>%
select(csignal, signal, time, diff, cdiff, count)
ggpairs(df)
library(GGally)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(diff = time - lag(time, 1)) %>%
mutate(csignal = cumsum(signal)/count) %>%
ungroup() %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | is.na(diff))) %>%
filter(diff > 0.1) %>%
group_by(userId, word) %>%
mutate(cdiff=cumsum(diff)) %>%
ungroup()
df <- diff_df %>%
select(csignal, signal, time, diff, cdiff, count)
ggpairs(df)
library(GGally)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(time = time - min(time)) %>%
mutate(csignal = cumsum(signal)/count) %>%
filter(time == max(time)) %>%
ungroup()
df <- diff_df %>%
select(csignal, signal, time, diff, cdiff, count)
library(GGally)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(time = time - min(time)) %>%
mutate(csignal = cumsum(signal)/count) %>%
filter(time == max(time)) %>%
ungroup()
df <- diff_df %>%
select(csignal, signal, time, count)
ggpairs(df)
library(GGally)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(time = time - min(time)) %>%
mutate(csignal = cumsum(signal)/count) %>%
filter(time == max(time)) %>%
ungroup()
df <- diff_df %>%
filter(count < 100) %>%
select(csignal, signal, time, count)
ggpairs(df)
library(GGally)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(time = time - min(time)) %>%
mutate(csignal = cumsum(signal)/count) %>%
filter(time == max(time)) %>%
ungroup()
df <- diff_df %>%
filter(count < 30) %>%
select(csignal, signal, time, count)
ggpairs(df)
library(GGally)
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
arrange(count) %>%
mutate(time = time - min(time)) %>%
mutate(csignal = cumsum(signal)/count) %>%
filter(time == max(time)) %>%
ungroup()
df <- diff_df %>%
filter(count < 20) %>%
select(csignal, signal, time, count)
ggpairs(df)
diff_df %>%
ggplot(aes(count, fill = signal)) +
geom_density(bw = 0.1, alpha = 0.5) +
scale_x_log10(breaks = c(0, 1, 2, 3, 4, 5, 6, 7, 15, 40)) +
# facet_wrap(~ cat_id, nrow = 3) +
theme_hc() +
theme(legend.position = "bottom") +
labs(x = "# of encounters", y = "", fill = "Signal",
title = "f(# of encounters)")
diff_df <- signal_with_id %>%
group_by(userId, word) %>%
mutate(diff = time - lag(time)) %>%
ungroup() %>%
mutate(diff = diff/(60*60*24)) %>%
filter(!(diff == 0 | diff < 0.1 | is.na(diff))) %>%
select(word, diff, count, signal) %>%
mutate(signal = as.character(signal))
diff_df %>%
ggplot(aes(diff, fill = signal)) +
geom_density(bw = 0.1, alpha = 0.5) +
scale_x_log10(breaks = c(0.1, 1, 7, 15, 40)) +
# facet_wrap(~ cat_id, nrow = 3) +
theme_hc() +
theme(legend.position = "bottom") +
labs(x = "Days", y = "", fill = "Signal",
title = "P(F|wait time)")
diff_df %>%
ggplot(aes(count, fill = signal)) +
geom_density(bw = 0.1, alpha = 0.5) +
scale_x_log10(breaks = c(0, 1, 2, 3, 4, 5, 6, 7, 15, 40)) +
# facet_wrap(~ cat_id, nrow = 3) +
theme_hc() +
theme(legend.position = "bottom") +
labs(x = "# of encounters", y = "", fill = "Signal",
title = "f(# of encounters)")
