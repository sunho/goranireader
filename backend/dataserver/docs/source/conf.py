# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.

import os
import sys
sys.path.insert(0, os.path.abspath('../..'))
sys.setrecursionlimit(1500)


# -- Project information -----------------------------------------------------

project = 'Gorani Reader'
copyright = '2020, /'
author = '/'


# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.autodoc', 'numpydoc'
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'kr'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'alabaster'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

from sphinx.ext.autodoc import cut_lines, Documenter, DataDocumenter

def add_directive_header(self, sig: str) -> None:
    domain = getattr(self, 'domain', 'py')
    directive = getattr(self, 'directivetype', self.objtype)
    name = self.format_name()
    if self.objtype == 'data':
        sig = ''
    sourcename = self.get_sourcename()
    self.add_line('.. %s:%s:: %s%s' % (domain, directive, name, sig),
                  sourcename)
    if self.options.noindex:
        self.add_line('   :noindex:', sourcename)
    if self.objpath:
        # Be explicit about the module, this is necessary since .. class::
        # etc. don't support a prepended module name
        self.add_line('   :module: %s' % self.modname, sourcename)

Documenter.add_directive_header = add_directive_header

DataDocumenter.add_directive_header = add_directive_header