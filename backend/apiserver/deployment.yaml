apiVersion: apps/v1
kind: Deployment
metadata:
  name: gorani-apiserver-deployment
  labels:
    app: gorani-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gorani-apiserver
  template:
    metadata:
      labels:
        app: gorani-apiserver
    spec:
      containers:
      - name: apiserver
        image: ksunhokim/gorani-apiserver:v2
        volumeMounts:
        - name: config-volume
          mountPath: /home/file.yaml
          subPath: file.yaml
        - name: config-volume
          mountPath: /home/database.yml
          subPath: database.yml
        - name: config-volume
          mountPath: /home/auth.yaml
          subPath: auth.yaml
        - name: config-volume
          mountPath: /home/data.yaml
          subPath: data.yaml
        ports:
        - containerPort: 5353
      volumes:
        - name: config-volume
          configMap:
            name: gorani-apiserver-configmap
---
apiVersion: v1
kind: Service
metadata:
  name: gorani-apiserver
spec:
  selector:
    app: gorani-apiserver
  ports:
  - protocol: TCP
    port: 80
    targetPort: 5353
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: gorani
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
spec:
  tls:
  - hosts:
    - gorani.sunho.kim
    secretName: gorani-sunho-kim-crt
  rules:
  - host: gorani.sunho.kim
    http:
      paths:
      - path: /
        backend:
          serviceName: gorani-apiserver
          servicePort: 80

