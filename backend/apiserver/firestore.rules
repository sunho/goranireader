rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function userData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function isAdmin() {
      return userData().admin && userData().admin == true;
    }
    match /userdata/{userId} {
      allow read, write: if request.auth.uid == userId;
      match /{document=**} {
        allow read, write: if request.auth.uid == userId;
      }
    }
    match /users {
      allow read, write: if isAdmin();
      match /{document=**} {
        allow read, update: if true; // TODO block update
        allow delete, create: if isAdmin();
      }
    }
    match /books {
      allow read: if true;
      allow write: if isAdmin();
      match /{document=**} {
        allow read: if true;
        allow write: if isAdmin();
      }
    }
    match /classes {
      match /{document=**} {
        allow read: if true;
        allow update: if isAdmin();
        allow delete, create: if false;
      }
    }
    match /dataResult/{classId} {
      allow read, write: if isAdmin() && classId in userData().classes;

      match /{document=**} {
        allow read, write: if isAdmin() && classId in userData().classes;
      }
    }
    match /dataResult/{classId}/clientComputed/{userId} {
      allow read, write: if request.auth.uid == userId && userData().classId == classId;

      match /{document=**} {
        allow read, write: if request.auth.uid == userId && userData().classId == classId;
      }
    }
  }
}