{"version":3,"sources":["utills/event.ts","bridge.tsx","utills/hooks.ts","components/Dict/index.tsx","components/SentenceSelector/index.tsx","components/SwipeItemChildren/index.tsx","components/Reader/index.tsx","components/ReaderWrapper/index.tsx","index.tsx"],"names":["LiteEvent","handlers","handler","this","push","filter","h","data","console","log","slice","forEach","Webapp","onFlushPaginate","onCancelSelect","onStart","window","app","DevAppImpl","IOSAppImpl","sentences","sid","trigger","load","i","sids","word","JSON","stringify","addable","words","pron","defs","def","id","wordIndex","resolveDict","undefined","webkit","messageHandlers","bridge","postMessage","type","Promise","res","rej","useOutsideClickObserver","ref","callback","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","useLiteEventObserver","deps","handleEvent","v","on","off","DictContainer","styled","div","props","up","css","hide","DictWordComponent","DictDefsComponent","DictButtons","DictButton","enabled","Dict","useState","setRes","pos","setPos","dictRef","useRef","selectedWord","sentenceId","dictSearch","out","parse","then","str","webapp","cancelSelect","resWord","notFound","node","length","onClick","map","key","addUnknownWord","SentenceSelectorContainer","top","bottom","SentenceSelector","conRef","selectedSentence","addUnknownSentence","SentenceComponent","p","inline","selected","WordComponent","span","SwipeItem","setSelectedWord","setSelectedSentence","pat","touch","figureSentenceUp","parentRect","parentElement","getBoundingClientRect","myRect","figureWordUp","sentence","j","toString","start","content","split","k","match","e","timer","setTimeout","clearTimeout","n","wordSelected","Math","floor","sentenceSelected","onTouchWord","Main","Swipe","ReactSwipe","loading","Reader","_dividePositions","setDividePositions","swipeItemRefs","swipeRef","idToPage","Map","readingSentence","dividePositions","getPageSentences","page","atHandle","readingPage","get","atStart","atEnd","atMiddle","readingSentenceChange","setLoading","lastItem","parentBounds","parentTop","parentHeight","height","pageTop","currentPage","cutPos","children","Array","fill","flatMap","_","sen","reduce","tuple","set","paginate","s","swipeOptions","startSlide","continuous","sens","getPos","old","neww","r","childCount","SwipeItemChildren","ReaderWrapper","tmp","setTmp","initComplete","GlobalStyle","createGlobalStyle","navigator","userAgent","setIOS","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8ef4005b.chunk.js","sourcesContent":["interface ILiteEvent<T> {\r\n  on(handler: { (data?: T): void }) : void;\r\n  off(handler: { (data?: T): void }) : void;\r\n}\r\n\r\nexport class LiteEvent<T> implements ILiteEvent<T> {\r\n  private handlers: { (data?: T): void; }[] = [];\r\n\r\n  public on(handler: { (data?: T): void }) : void {\r\n      this.handlers.push(handler);\r\n  }\r\n\r\n  public off(handler: { (data?: T): void }) : void {\r\n      this.handlers = this.handlers.filter(h => h !== handler);\r\n  }\r\n\r\n  public trigger(data?: T) {\r\n      console.log(this.handlers);\r\n      this.handlers.slice(0).forEach(h => h(data));\r\n  }\r\n\r\n  public expose() : ILiteEvent<T> {\r\n      return this;\r\n  }\r\n}\r\n","import { Sentence, DictSearchResult } from \"./model\";\r\nimport { LiteEvent } from \"./utills/event\";\r\n\r\nexport interface App {\r\n  initComplete(): void;\r\n  setLoading(loading: boolean): void;\r\n  atStart(): void;\r\n  atMiddle(): void;\r\n  atEnd(): void;\r\n  paginate(sids: string[]): void;\r\n  wordSelected(i: number, sid: string): void;\r\n  sentenceSelected(sid: string): void;\r\n  readingSentenceChange(sid: string): void;\r\n  dictSearch(word: string): string | Promise<string>;\r\n  addUnknownWord(sid: string, wordIndex: number, word: string, def: string): void;\r\n  addUnknownSentence(sid: string): void;\r\n}\r\n\r\nexport class Webapp {\r\n  readonly onFlushPaginate = new LiteEvent<void>();\r\n  readonly onCancelSelect = new LiteEvent<void>();\r\n  readonly onStart = new LiteEvent<{sentences: Sentence[], sid: string}>();\r\n\r\n  setDev() {\r\n    window.app = new DevAppImpl();\r\n  }\r\n\r\n  setIOS() {\r\n    window.app = new IOSAppImpl();\r\n  }\r\n\r\n  start(sentences: Sentence[], sid: string) {\r\n    this.onStart.trigger({\r\n      sentences: sentences,\r\n      sid: sid\r\n    });\r\n  }\r\n\r\n  flushPaginate() {\r\n    this.onFlushPaginate.trigger();\r\n  }\r\n\r\n  cancelSelect() {\r\n    this.onCancelSelect.trigger();\r\n  }\r\n}\r\n\r\nclass DevAppImpl implements App {\r\n  constructor() {}\r\n\r\n  initComplete() {\r\n    console.log(\"[app] init complete\");\r\n  }\r\n\r\n  setLoading(load: boolean) {\r\n    console.log(\"[app] loading: \" + load);\r\n  }\r\n\r\n  atStart() {\r\n    console.log(\"[app] at start\");\r\n  }\r\n\r\n  atMiddle() {\r\n    console.log(\"[app] at middle\");\r\n  }\r\n\r\n  atEnd() {\r\n    console.log(\"[app] at end\");\r\n  }\r\n\r\n  wordSelected(i: number, sid: string) {\r\n    console.log(\"[app] at end i: \" + i + \" sid:\" + sid);\r\n  }\r\n\r\n  paginate(sids: string[]) {\r\n    console.log(\"[app] paginate sids\");\r\n    console.log(sids)\r\n  }\r\n\r\n  sentenceSelected(sid: string) {\r\n    console.log(\"[app] sentence selected sid:\"+ sid);\r\n  }\r\n\r\n  readingSentenceChange(sid: string) {\r\n    console.log(\"[app] reading setence changed\");\r\n  }\r\n\r\n  dictSearch(word: string): string {\r\n    const out: DictSearchResult = {\r\n      addable: false,\r\n      words: [\r\n        {\r\n          word: \"hello\",\r\n          pron: \"\",\r\n          defs: [\r\n            {\r\n              def: \"asdfasf\",\r\n              id: 1,\r\n            },\r\n            {\r\n              def: \"asdfasf\",\r\n              id: 1,\r\n            },\r\n            {\r\n              def: \"asdfasf\",\r\n              id: 1,\r\n            },\r\n            {\r\n              def: \"asdfasf\",\r\n              id: 1,\r\n            },\r\n            {\r\n              def: \"asdfasf\",\r\n              id: 1,\r\n            },\r\n            {\r\n              def: \"asdfasf\",\r\n              id: 1,\r\n            },\r\n            {\r\n              def: \"asdfasf\",\r\n              id: 1,\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          word: \"hello\",\r\n          pron: \"\",\r\n          defs: [\r\n            {\r\n              def: \"asdfasf\",\r\n              id: 1,\r\n            },\r\n            {\r\n              def: \"asdfasf\",\r\n              id: 1,\r\n            },\r\n            {\r\n              def: \"asdfasf\",\r\n              id: 1,\r\n            },\r\n            {\r\n              def: \"asdfasf\",\r\n              id: 1,\r\n            },\r\n            {\r\n              def: \"asdfasf\",\r\n              id: 1,\r\n            },\r\n            {\r\n              def: \"asdfasf\",\r\n              id: 1,\r\n            },\r\n            {\r\n              def: \"asdfasf\",\r\n              id: 1,\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n    return JSON.stringify(out);\r\n  }\r\n\r\n  addUnknownSentence(sid: string) {\r\n    console.log(`addUnknownSentence sid: ${sid}`);\r\n  }\r\n\r\n  addUnknownWord(sid: string, wordIndex: number, word: string, def: string) {\r\n    console.log(`addUnknownWord sid: ${sid} wordIndex: ${wordIndex} word: ${word} def: ${def}`);\r\n  }\r\n}\r\n\r\nclass IOSAppImpl implements App {\r\n  resolveDict?: (res: string) => void = undefined;\r\n  constructor() {}\r\n\r\n  initComplete() {\r\n    window.webkit.messageHandlers.bridge.postMessage({type: \"initComplete\"})\r\n  }\r\n\r\n  setLoading(load: boolean) {\r\n    window.webkit.messageHandlers.bridge.postMessage({type: \"setLoading\", load: load})\r\n  }\r\n\r\n  atStart() {\r\n    window.webkit.messageHandlers.bridge.postMessage({type: \"atStart\"})\r\n  }\r\n\r\n  atMiddle() {\r\n    window.webkit.messageHandlers.bridge.postMessage({type: \"atMiddle\"})\r\n  }\r\n\r\n  atEnd() {\r\n    window.webkit.messageHandlers.bridge.postMessage({type: \"atEnd\"})\r\n  }\r\n\r\n  wordSelected(i: number, sid: string) {\r\n    window.webkit.messageHandlers.bridge.postMessage({type: \"wordSelected\", i: i, sid: sid})\r\n  }\r\n\r\n  paginate(sids: string[]) {\r\n    window.webkit.messageHandlers.bridge.postMessage({type: \"paginate\", sids: sids})\r\n  }\r\n\r\n  sentenceSelected(sid: string) {\r\n    window.webkit.messageHandlers.bridge.postMessage({type: \"sentenceSelected\", sid: sid})\r\n  }\r\n\r\n\r\n  readingSentenceChange(sid: string) {\r\n    window.webkit.messageHandlers.bridge.postMessage({type: \"readingSentenceChange\", sid: sid})\r\n  }\r\n\r\n  dictSearch(word: string): Promise<string> {\r\n    window.webkit.messageHandlers.bridge.postMessage({type: \"dictSearch\", word: word})\r\n    return new Promise((res, rej) => {\r\n      this.resolveDict = res;\r\n    });\r\n  }\r\n\r\n  dictSearchResolve(res: string) {\r\n    if (this.resolveDict) {\r\n      this.resolveDict(res);\r\n    }\r\n  }\r\n\r\n  addUnknownSentence(sid: string) {\r\n    window.webkit.messageHandlers.bridge.postMessage({type: \"addUnknownSentence\", sid: sid})\r\n    console.log(`addUnknownSentence sid: ${sid}`);\r\n  }\r\n\r\n  addUnknownWord(sid: string, wordIndex: number, word: string, def: string) {\r\n    window.webkit.messageHandlers.bridge.postMessage({type: \"addUnknownWord\", sid: sid, wordIndex: wordIndex, word: word, def: def})\r\n  }\r\n}\r\n\r\n","import { MutableRefObject, useEffect } from \"react\";\r\nimport { LiteEvent } from \"./event\";\r\n\r\nexport function useOutsideClickObserver(\r\n  ref: MutableRefObject<HTMLElement | null | undefined>,\r\n  callback: () => void\r\n) {\r\n  function handleClickOutside(event: any) {\r\n    if (ref.current && !ref.current.contains(event.target)) {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  });\r\n}\r\n\r\nexport function useLiteEventObserver<T>(\r\n  event: LiteEvent<T>,\r\n  callback: (v?: T) => void,\r\n  deps: any\r\n) {\r\n  function handleEvent(v?: T) {\r\n    callback(v)\r\n  }\r\n\r\n  useEffect(() => {\r\n    event.on(handleEvent);\r\n    return () => {\r\n      event.off(handleEvent);\r\n    }\r\n  }, deps);\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { SelectedWord, DictSearchResult, DictWord } from \"../../model\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { useOutsideClickObserver } from \"../../utills/hooks\";\r\nimport { instanceOf } from \"prop-types\";\r\n\r\nconst DictContainer = styled.div<{ up: boolean; hide: boolean }>`\r\n  position: fixed;\r\n  ${props =>\r\n    props.up\r\n      ? css`\r\n          top: 10px;\r\n        `\r\n      : css`\r\n          bottom: 10px;\r\n        `}\r\n  ${props =>\r\n    props.hide &&\r\n    css`\r\n      visibility: none;\r\n    `}\r\n  background: white;\r\n  height: calc(40%);\r\n  width: calc(100% - 40px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);\r\n  margin-left: 20px;\r\n  z-index: 999;\r\n`;\r\n\r\nconst DictWordComponent = styled.div`\r\n  flex-shrink: 0;\r\n  margin-bottom: 15px;\r\n  padding-top: 15px;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  font-weight: 500;\r\n  font-size: 15pt;\r\n`;\r\n\r\nconst DictDefsComponent = styled.div`\r\n  margin-top: 5px;\r\n  overflow-y: auto;\r\n  & > div {\r\n    background: lightgray;\r\n    padding: 10px;\r\n    margin-bottom: 10px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n    border-radius: 10px;\r\n    &:active {\r\n      background: gray;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DictButtons = styled.div`\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  padding-top: 10px;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst DictButton = styled.div<{ enabled: boolean }>`\r\n  padding: 7px;\r\n  background: gray;\r\n  color: white;\r\n  ${props =>\r\n    !props.enabled &&\r\n    css`\r\n      opacity: 0;\r\n      pointer-events: none;\r\n    `}\r\n`;\r\n\r\ninterface Props {\r\n  selectedWord: SelectedWord;\r\n}\r\n\r\nconst Dict: React.FC<Props> = props => {\r\n  const [res, setRes] = useState<DictSearchResult | undefined>(undefined);\r\n  const [pos, setPos] = useState(0);\r\n  const dictRef = useRef<HTMLElement | null | undefined>(undefined);\r\n  const { word, wordIndex, up, sentenceId } = props.selectedWord;\r\n\r\n  useEffect(() => {\r\n    const res = window.app.dictSearch(word);\r\n    if (typeof res === 'string') {\r\n      const out: DictSearchResult = JSON.parse(res);\r\n      setRes(out);\r\n    } else {\r\n      res.then((str) => {\r\n        const out: DictSearchResult = JSON.parse(str);\r\n        setRes(out);\r\n      })\r\n    }\r\n  }, [props]);\r\n\r\n  useOutsideClickObserver(dictRef, () => {\r\n    window.webapp.cancelSelect();\r\n  });\r\n\r\n  const result = (resWord: DictWord) => {\r\n    return (\r\n      <>\r\n        {res!.words.length !== 1 && (\r\n          <DictButtons>\r\n            <DictButton\r\n              onClick={() => {\r\n                setPos(pos - 1);\r\n              }}\r\n              enabled={pos !== 0}\r\n            >\r\n              prev\r\n            </DictButton>\r\n            <DictButton\r\n              onClick={() => {\r\n                setPos(pos + 1);\r\n              }}\r\n              enabled={pos !== res!.words.length - 1}\r\n            >\r\n              next\r\n            </DictButton>\r\n          </DictButtons>\r\n        )}\r\n        <DictWordComponent>{resWord.word}</DictWordComponent>\r\n        <DictDefsComponent>\r\n          {resWord.defs.map((def, i) => (\r\n            <div key={i} onClick={() => {\r\n              window.app.addUnknownWord(sentenceId, wordIndex, resWord.word, def.def);\r\n              window.webapp.cancelSelect();\r\n            }}>{def.def}</div>\r\n          ))}\r\n        </DictDefsComponent>\r\n      </>\r\n    );\r\n  };\r\n  const notFound = <div>Not found</div>;\r\n  return (\r\n    <DictContainer hide={!res} ref={node => (dictRef.current = node)} up={up}>\r\n      {res && res.words[pos] ? result(res.words[pos]) : notFound}\r\n    </DictContainer>\r\n  );\r\n};\r\n\r\nexport default Dict;\r\n","import React, { useRef } from \"react\";\r\nimport { SelectedSentence } from \"../../model\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { useOutsideClickObserver } from \"../../utills/hooks\";\r\n\r\nconst SentenceSelectorContainer = styled.div<{  bottom: number; top: number; up: boolean;}>`\r\n  display: flex;\r\n  position: fixed;\r\n  ${props => {\r\n    if (props.up) {\r\n      return css`\r\n        top: ${props.top - 36}px;\r\n      `;\r\n    } else {\r\n      return css`\r\n        top: ${props.bottom}px;\r\n      `;\r\n    }\r\n  }}\r\n\r\n  & > div {\r\n    background: gray;\r\n    color: white;\r\n  }\r\n  z-index: 999;\r\n`;\r\n\r\ninterface Props {\r\n  selectedSentence: SelectedSentence;\r\n}\r\n\r\nconst SentenceSelector: React.FC<Props> = props => {\r\n  const conRef = useRef<HTMLElement | undefined | null>(undefined);\r\n  useOutsideClickObserver(conRef, () => {\r\n    window.webapp.cancelSelect();\r\n  });\r\n\r\n  return (\r\n    <SentenceSelectorContainer\r\n      ref={node => {\r\n        conRef.current = node;\r\n      }}\r\n      up={props.selectedSentence.up}\r\n      top={props.selectedSentence.top}\r\n      bottom={props.selectedSentence.bottom}\r\n    >\r\n      <div onClick={() => {\r\n        window.app.addUnknownSentence(props.selectedSentence.sentenceId);\r\n        window.webapp.cancelSelect();\r\n      }}>I have no idea!</div>\r\n    </SentenceSelectorContainer>\r\n  );\r\n};\r\n\r\nexport default SentenceSelector;\r\n","import React, { MutableRefObject, useRef, useState, useEffect } from \"react\";\r\nimport { Sentence, SelectedWord, SelectedSentence } from \"../../model\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Dict from \"../Dict\";\r\nimport SentenceSelector from \"../SentenceSelector\";\r\n\r\nconst SentenceComponent = styled.p<{ inline: boolean; selected: boolean }>`\r\n  padding: 0;\r\n  margin: 10px 0;\r\n\r\n  ${props =>\r\n    !props.inline &&\r\n    css`\r\n      display: inline;\r\n      margin: 0;\r\n    `}\r\n  ${props =>\r\n    props.selected &&\r\n    css`\r\n      background: black;\r\n    `}\r\n`;\r\n\r\nconst WordComponent = styled.span<{ selected: boolean }>`\r\n  ${props =>\r\n    props.selected &&\r\n    css`\r\n      background: red;\r\n    `}\r\n`;\r\n\r\ninterface Props {\r\n  sentences: Sentence[];\r\n}\r\n\r\nconst SwipeItem: React.FC<Props> = (props: Props) => {\r\n  const [selectedWord, setSelectedWord] = useState<SelectedWord | undefined>(undefined);\r\n  const [selectedSentence, setSelectedSentence] = useState<SelectedSentence | undefined>(\r\n    undefined\r\n  );\r\n  const pat = /([\\s!,\":;.?“”()—]+)/;\r\n  const touch: MutableRefObject<\r\n    { id: string; n: number; timer: number } | undefined\r\n  > = useRef(undefined);\r\n  const figureSentenceUp = (word: HTMLElement) => {\r\n    const parentRect = word.parentElement!.parentElement!.getBoundingClientRect();\r\n    const myRect = word.parentElement!.getBoundingClientRect();\r\n    return (parentRect.top - myRect.top) ** 2 > (myRect.bottom - parentRect.bottom) ** 2\r\n  }\r\n  const figureWordUp = (word: HTMLElement) => {\r\n    const parentRect = word.parentElement!.parentElement!.getBoundingClientRect();\r\n    const myRect = word.getBoundingClientRect();\r\n    return (parentRect.top - myRect.top) ** 2 > (myRect.bottom - parentRect.bottom) ** 2\r\n  }\r\n  const onTouchWord = (node: HTMLElement, j: number, k: number, word: string) => {\r\n    const id = `${j}-${k}`;\r\n    const timer = setTimeout(() => {\r\n      touch.current = undefined;\r\n    }, 300);\r\n    if (touch.current && touch.current.id === id) {\r\n      clearTimeout(touch.current.timer);\r\n      touch.current.timer = timer;\r\n      touch.current.n++;\r\n    } else {\r\n      touch.current = {\r\n        id: id,\r\n        timer: timer,\r\n        n: 1\r\n      };\r\n    }\r\n    if (touch.current.n === 2) {\r\n      setSelectedWord({\r\n        id: `${j}-${k}`,\r\n        word: word,\r\n        sentenceId: sentences[j].id,\r\n        wordIndex: k/2,\r\n        up: figureWordUp(node)\r\n      });\r\n      window.app.wordSelected(Math.floor(k / 2), sentences[j].id);\r\n      setSelectedSentence(undefined);\r\n    } else if (touch.current.n === 3) {\r\n      setSelectedWord(undefined);\r\n      setSelectedSentence({\r\n        id: j.toString(),\r\n        sentenceId: sentences[j].id,\r\n        top: node.parentElement!.getBoundingClientRect().top,\r\n        bottom: node.parentElement!.getBoundingClientRect().bottom,\r\n        up: figureSentenceUp(node)\r\n      });\r\n      window.app.sentenceSelected(sentences[j].id);\r\n    } else {\r\n      setSelectedWord(undefined);\r\n      setSelectedSentence(undefined);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let handler: any;\r\n    if (selectedWord) {\r\n      handler = () => {\r\n        setSelectedWord(undefined);\r\n      };\r\n    } else if (selectedSentence) {\r\n      handler = () => {\r\n        setSelectedSentence(undefined);\r\n      };\r\n    }\r\n\r\n    if (handler) {\r\n      window.webapp.onCancelSelect.on(handler);\r\n    }\r\n    return () => {\r\n      if (handler) {\r\n        window.webapp.onCancelSelect.off(handler);\r\n      }\r\n    };\r\n  }, [selectedSentence, selectedWord]);\r\n\r\n  const { sentences } = props;\r\n\r\n  return (\r\n    <>\r\n      {\r\n        selectedWord &&\r\n        <Dict selectedWord={selectedWord}></Dict>\r\n      }\r\n      {\r\n        selectedSentence &&\r\n        <SentenceSelector selectedSentence={selectedSentence}></SentenceSelector>\r\n      }\r\n      {sentences.map((sentence, j) => (\r\n        <SentenceComponent\r\n          selected={selectedSentence ? selectedSentence.id === j.toString() : false}\r\n          inline={!sentence.start}\r\n          key={j}\r\n        >\r\n          {sentence.content.split(pat).map((word: string, k: number) => (\r\n            <WordComponent\r\n              selected={ selectedWord ? selectedWord.id === `${j}-${k}` : false}\r\n              key={k}\r\n              onClick={\r\n                !word.match(pat)\r\n                  ? (e) => {\r\n                      onTouchWord(e.target as HTMLElement, j, k, word);\r\n                    }\r\n                  : undefined\r\n              }\r\n            >\r\n              {word}\r\n            </WordComponent>\r\n          ))}\r\n        </SentenceComponent>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SwipeItem;\r\n","import React, { useState, useEffect, useRef, MutableRefObject } from \"react\";\r\nimport ReactSwipe from \"react-swipe\";\r\nimport {\r\n  useOutsideClickObserver,\r\n  useLiteEventObserver\r\n} from \"../../utills/hooks\";\r\nimport SwipeItemChildren from \"../SwipeItemChildren\";\r\nimport { Sentence } from \"../../model\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst Main = styled.div`\r\n  height: calc(100vh - 20px);\r\n  padding: 10px 0;\r\n  width: 100%;\r\n`;\r\n\r\nconst SwipeItem = styled.div`\r\n  max-height: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Swipe = styled(ReactSwipe)<{ loading: boolean }>`\r\n  overflow: hidden;\r\n  height: 100%;\r\n  width: 100%;\r\n  & > div {\r\n    height: 100%;\r\n  }\r\n\r\n  & > * > div {\r\n    height: 100%;\r\n  }\r\n\r\n  ${props =>\r\n    props.loading &&\r\n    css`\r\n      opacity: 0;\r\n      pointer-events: none;\r\n    `}\r\n`;\r\n\r\ninterface Props {\r\n  sentences: Sentence[];\r\n  readingSentence: string;\r\n}\r\n\r\n// thanks to  https://github.com/yoo2001818\r\nconst Reader: React.FC<Props> = (props: Props) => {\r\n  const sentences = props.sentences;\r\n  const [_dividePositions, setDividePositions]: [any, any] = useState<number[]|null>(null);\r\n  const swipeItemRefs: any = useRef([]);\r\n\r\n  const swipeRef: MutableRefObject<ReactSwipe | null> = useRef(null);\r\n  const idToPage = useRef(new Map());\r\n  const readingSentence: MutableRefObject<string> = useRef(\r\n    props.readingSentence\r\n  );\r\n\r\n  const dividePositions = _dividePositions || [];\r\n\r\n  const getPageSentences = (page: number) => {\r\n    if (page === dividePositions.length) {\r\n      return sentences.slice(dividePositions[page - 1] || 0);\r\n    }\r\n    return sentences.slice(\r\n      dividePositions[page - 1] || 0,\r\n      dividePositions[page]\r\n    );\r\n  };\r\n\r\n  const atHandle = () => {\r\n    const readingPage = idToPage.current.get(readingSentence.current) || 0;\r\n    if (readingPage === 0) {\r\n      window.app.atStart();\r\n    }\r\n    if (readingPage === dividePositions.length) {\r\n      window.app.atEnd();\r\n    }\r\n    if (readingPage !== 0 && readingPage !== dividePositions.length) {\r\n      window.app.atMiddle();\r\n    }\r\n    window.app.readingSentenceChange(readingSentence.current);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (_dividePositions) {\r\n      window.app.setLoading(false);\r\n      atHandle();\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    // 마지막 페이지의 자를 노드 위치 계산\r\n    const lastItem = swipeItemRefs.current[0];\r\n    const parentBounds = lastItem.getBoundingClientRect();\r\n    const parentTop = parentBounds.top;\r\n    const parentHeight = parentBounds.height;\r\n    const prevPos = 0;\r\n    let pageTop = parentTop;\r\n    let currentPage = 0;\r\n    let cutPos: any = [];\r\n    // HTMLElement.children은 놀랍게도 배열이 아니라서 findIndex같은걸 못써요 ㅠㅠ\r\n    for (let i = 0; i < lastItem.children.length; i += 1) {\r\n      const childNode = lastItem.children[i];\r\n      const childBounds = childNode.getBoundingClientRect();\r\n      const offset = childBounds.bottom - pageTop;\r\n      if (offset >= parentHeight) {\r\n        pageTop = lastItem.children[i - 1].getBoundingClientRect().bottom;\r\n        // 노드 위치는 dividePositions의 마지막 값만큼 뒤로 가있기 때문에 앞으로 다시\r\n        // 밀어주는 작업이 필요함\r\n        cutPos[currentPage] = i + prevPos;\r\n        currentPage += 1;\r\n      }\r\n    }\r\n    const getPageSentencesByCutPos = (page: number) => {\r\n      if (page === cutPos.length) {\r\n        return sentences.slice(cutPos[page - 1] || 0);\r\n      }\r\n      return sentences.slice(\r\n        cutPos[page - 1] || 0,\r\n        cutPos[page]\r\n      );\r\n    };\r\n    readingSentence.current = props.readingSentence;\r\n    idToPage.current = Array(cutPos.length + 1)\r\n        .fill(1)\r\n        .flatMap((_: any, i: number) =>\r\n          getPageSentencesByCutPos(i).map(sen => [sen.id, i])\r\n        )\r\n        .reduce((map: Map<string, number>, tuple: any) => {\r\n          map.set(tuple[0], tuple[1]);\r\n          return map;\r\n        }, new Map());\r\n    setDividePositions(cutPos);\r\n  }, []);\r\n\r\n  useLiteEventObserver(\r\n    window.webapp.onFlushPaginate,\r\n    () => {\r\n      const current = idToPage.current.get(readingSentence.current) || 0;\r\n      window.app.paginate(getPageSentences(current).map(s => s.id));\r\n    },\r\n    []\r\n  );\r\n\r\n  const swipeOptions = {\r\n    startSlide: idToPage.current.get(readingSentence.current) || 0,\r\n    continuous: false,\r\n    callback: () => {\r\n      if (swipeRef.current) {\r\n        const sens = getPageSentences(swipeRef.current.getPos());\r\n        const old = idToPage.current.get(readingSentence.current) || 0;\r\n        const neww = idToPage.current.get(sens[0].id) || 0;\r\n        readingSentence.current = sens[0].id;\r\n        if (neww > old) {\r\n          window.app.paginate(getPageSentences(old).map(s => s.id));\r\n        }\r\n        window.webapp.cancelSelect();\r\n        atHandle();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Main>\r\n      <Swipe\r\n        loading={!_dividePositions}\r\n        swipeOptions={swipeOptions}\r\n        ref={r => (swipeRef.current = r)}\r\n        childCount={dividePositions.length + 1}\r\n      >\r\n        {Array(dividePositions.length + 1)\r\n          .fill(1)\r\n          .map((_: any, i: number) => (\r\n            <SwipeItem\r\n              key={i}\r\n              ref={node => {\r\n                swipeItemRefs.current[i] = node;\r\n              }}\r\n            >\r\n              <SwipeItemChildren sentences={getPageSentences(i)} />\r\n            </SwipeItem>\r\n          ))}\r\n      </Swipe>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default Reader;\r\n","import { useLiteEventObserver } from \"../../utills/hooks\";\r\nimport { useState, useEffect } from \"react\";\r\nimport React from \"react\";\r\nimport Reader from \"../Reader\";\r\n\r\nconst ReaderWrapper: React.SFC = () => {\r\n  const [tmp, setTmp]: [any, any] = useState(null);\r\n  useLiteEventObserver(\r\n    window.webapp.onStart,\r\n    (event: any) => {\r\n      setTmp(null);\r\n      setTmp({\r\n        sentences: event.sentences,\r\n        sid: event.sid\r\n      });\r\n    },\r\n    [setTmp]\r\n  );\r\n  useEffect(() => {\r\n    window.app.initComplete();\r\n    if (process.env.NODE_ENV === \"development\") {\r\n      const data = Array(100)\r\n        .fill(1)\r\n        .map((x, y) => x + y)\r\n        .map(id => ({\r\n          id: id.toString(),\r\n          content:\r\n            \"afdasf asdf safasdf, safasd! (sadf asdfasf, sadf) asdfsa fsadf sadf sadfasfsadf sad fasdf adsf asdf asdf safsd afsa fsfasd fasf sad\",\r\n          start: false\r\n        }));\r\n      window.webapp.start(data, \"50\");\r\n    }\r\n  }, []);\r\n  return (\r\n    <>{tmp && <Reader sentences={tmp.sentences} readingSentence={tmp.sid} />}</>\r\n  );\r\n};\r\n\r\nexport default ReaderWrapper;\r\n","import \"react-app-polyfill/stable\";\r\nimport \"./index.css\";\r\nimport { Webapp } from \"./bridge\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ReaderWrapper from \"./components/ReaderWrapper\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  code {\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\r\n      monospace;\r\n  }\r\n`;\r\n\r\nwindow.webapp = new Webapp();\r\nif (process.env.NODE_ENV === \"development\") {\r\n  window.webapp.setDev();\r\n}\r\nif (navigator.userAgent == \"ios\") {\r\n  window.webapp.setIOS();\r\n}\r\n\r\nReactDOM.render(\r\n  <div>\r\n    <GlobalStyle/>\r\n    <ReaderWrapper/>\r\n  </div>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}